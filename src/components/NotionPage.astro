---
import Layout from "@/layouts/Layout.astro";

import type { ExtendedRecordMap } from "notion-types";
import { getPageTitle, getBlockTitle } from "notion-utils";
import NotionRenderer from "@/components/react/NotionRenderer";
import { unnest } from "ramda";
import { getImage } from "astro:assets";
import qs from "qs";

interface Props {
  recordMap: ExtendedRecordMap;
  rootPageId?: string;
}

const { recordMap, rootPageId } = Astro.props;

// get all image blocks
const imageBlocks = Object.values(recordMap.block).filter(
  (block) => block.value.type === "image",
);

const imageMap = {};
for (const block of imageBlocks) {
  let imageSrc = unnest(block.value.properties.source)[0];

  if (
    imageSrc.indexOf("notion-static.com") >= 0 ||
    imageSrc.indexOf("prod-files-secure") >= 0
  ) {
    const query = {
      table: "block",
      id: block.value.id,
    };

    imageSrc = `https://www.notion.so/image/${encodeURIComponent(imageSrc)}?${qs.stringify(query)}`;
  }

  imageMap[block.value.id] = await getImage({
    src: imageSrc,
    inferSize: true,
  });
}
---

<NotionRenderer
  recordMap={recordMap}
  imageMap={imageMap}
  fullPage={false}
  darkMode={false}
  rootPageId={rootPageId}
  client:load
/>
